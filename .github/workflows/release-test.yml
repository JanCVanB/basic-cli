on:
  workflow_dispatch:

# this cancels workflows currently in progress if you start a new one
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:

  test-latest-release:
    runs-on: [ubuntu-20.04]
    steps:
      - uses: actions/checkout@v3

      - run: sudo apt install -y jq

      - name: get latest roc nightly
        run: |
          curl -fOL https://github.com/roc-lang/roc/releases/download/nightly/roc_nightly-linux_x86_64-latest.tar.gz

      - name: rename nightly tar
        run: mv $(ls | grep "roc_nightly.*tar\.gz") roc_nightly.tar.gz

      - name: decompress the tar
        run: tar -xzf roc_nightly.tar.gz

      - run: rm roc_nightly.tar.gz

      - name: simplify nightly folder name
        run: mv roc_nightly* roc_nightly

      - run: ./roc_nightly/roc version

      - name: get latest basic-cli release file URL
        run: |
            CLI_RELEASES_JSON=$(curl -s https://api.github.com/repos/roc-lang/basic-cli/releases)
            CLI_RELEASE_URL=$(echo $CLI_RELEASES_JSON | jq -r '.[0].assets | .[] | select(.name | test("\\.(tar\\.br|tar\\.gz)$")) | .browser_download_url')
            echo "CLI_RELEASE_URL=$CLI_RELEASE_URL" >> $GITHUB_ENV
    
      - name: use latest basic-cli release as platform for every example
        env:
            CLI_RELEASE_URL: ${{ env.CLI_RELEASE_URL }}
        run: |
          sed -i "s|../src/main.roc|$CLI_RELEASE_URL|g" ./examples/*.roc

      - run: sudo apt install -y expect ncat
      # expect for testing
      # ncat for tcp-client exampl
      
      - name: Run all tests
        run: ./ci/all_tests.sh
